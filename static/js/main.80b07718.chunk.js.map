{"version":3,"sources":["Container.js","logo.svg","App.js","serviceWorker.js","index.js"],"names":["Container","state","isOpen","message","this","setState","msg","substr","length","val","console","log","arr","sum","parseFloat","eval","toFixed","toString","className","onClick","clearMessage","bracket","changeMessage","backspace","calculate","Component","module","exports","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.80b07718.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './calculator.css'\n\nclass Container extends Component {\n    constructor(){\n        super()\n        this.state = {\n            isOpen : true,\n            message : \"\"\n            \n        }\n\n    }\n    clearMessage(){\n        this.setState({\n            message: \"\",\n            \n    \n        })\n    }\n    backspace(){\n        let msg = this.state.message \n        this.setState({\n            message : msg.substr(0,msg.length-1)\n        })\n    }\n    changeMessage(val){\n        console.log(\"clicked\")\n        this.setState({\n           \n            message : this.state.message + val\n\n        })\n    }\n    bracket(){\n        \n        let msg = this.state.isOpen ? \"(\" : \")\" \n        this.setState({\n            message : this.state.message + msg,\n            isOpen : !this.state.isOpen\n        })\n    }\n    calculate(arr){\n        let sum = parseFloat(eval(this.state.message)).toFixed(8)\n        this.setState({\n            message : sum.toString()\n        },console.log(sum,typeof sum,this.state.message))\n    }\n    render() {\n        return (\n            <div className=\"main-container\">\n                <div className=\"valueDisplay\">{this.state.message}</div>\n                <div className=\"values\">\n                    <div className=\"rowCell\">\n                        <div className=\"cell\" onClick={()=>this.clearMessage()} >C</div>\n                        <div className=\"cell\" onClick={()=>this.bracket()}>()</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(\"%\")}>%</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(\"/\")}>รท</div>\n                    </div>\n                    <div className=\"rowCell\">\n                        <div className=\"cell\" onClick={()=>this.changeMessage(7)}>7</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(8)}>8</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(9)}>9</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(\"*\")}>x</div>\n                    </div>\n                    <div className=\"rowCell\">\n                        <div className=\"cell\" onClick={()=>this.changeMessage(4)}>4</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(5)}>5</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(6)}>6</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(\"-\")}>-</div>\n                    </div>\n                    <div className=\"rowCell\">\n                        <div className=\"cell\" onClick={()=>this.changeMessage(1)}>1</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(2)}>2</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(3)}>3</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(\"+\")}>+</div>\n                    </div>\n                    <div className=\"rowCell\">\n                        <div className=\"cell\" onClick={()=>this.backspace()}>CE</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(0)}>0</div>\n                        <div className=\"cell\" onClick={()=>this.changeMessage(\".\")}>.</div>\n                        <div className=\"cell\" onClick={()=>this.calculate(this.state.arr)}>=</div>\n                    </div>\n                </div>\n\n\n                \n            </div>\n        )\n    }\n}\n\nexport default Container\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Container from './Container.js'\nimport './calculator.css'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <Container />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}